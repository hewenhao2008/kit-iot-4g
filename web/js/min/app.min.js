var app=angular.module("kitIoT",["ngRoute"]).config(function($routeProvider){$routeProvider.when("/",{templateUrl:"views/mainView.html",controller:"mainCtrl"}).when("/dashboard",{templateUrl:"views/dashboardView.html",controller:"dashBoardCtrl"}).when("/disconnect",{templateUrl:"views/disconnectView.html",controller:"disconnectCtrl"}).when("/logout",{templateUrl:"views/mainView.html",controller:"logoutCtrl"}).otherwise({redirectTo:"/"})});app.run(function($rootScope,$location,Auth,Storage,socket){$rootScope.$on("$routeChangeStart",function(event,next){socket.emit("stop"),$location.path(Auth.isLoggedIn()?"views/disconnectView.html"===next.templateUrl?"/disconnect":"/dashboard":"/")}),$rootScope.$on("$routeChangeSuccess",function(){$rootScope.url=$location.path()})}),app.controller("dashBoardCtrl",function($scope,$rootScope,$location,Storage,socket){"use strict";$scope.data={},$scope.msg="Conectando",$scope.connected=!1,$scope.internet=!1,socket.emit("start"),socket.on("data",function(m){$scope.data=m,$scope.connected=!0}),socket.on("button",function(m){$scope.data.button=m}),socket.on("disconnect",function(){$scope.internet=!1,$scope.msg="Kit desconectado",$scope.connected=!1,$location.path("/disconnect")}),socket.on("logout",function(){$scope.internet=!1,$scope.connected=!1,$location.path("/logout")}),socket.on("internetConnection",function(m){$scope.internet=!0,$scope.msg=m.msg}),socket.on("no-internetConnection",function(m){$scope.internet=!1,$scope.msg=m.msg})}),app.controller("disconnectCtrl",function($scope){$scope.message="Parece que seu kit não está conectado"}),app.controller("logoutCtrl",function($location,Auth){"use strict";Auth.logout(),$location.path("/")}),app.controller("mainCtrl",function($scope,socket,$http,$location,Auth){"use strict";$scope.loginUser=function(){$scope.loading=!0,$http.post("/login",{name:$scope.name,email:$scope.email,username:$scope.username,password:$scope.password,service:$scope.service,apikey:$scope.apikey}).success(function(data){$scope.loading=!1,data.errors?($scope.errors=data.errors,$scope.error=null):data.error?($scope.errors=$scope.error=null,$scope.error="EHOSTUNREACH"===data.error.code?{msg:"Sem conexão com a internet"}:data.error):data.exceptionId?($scope.errors=$scope.error=null,$scope.error={msg:"Erro ao autenticar o token"},$scope.mapErrors={service:"Erro ao autenticar o token"}):($scope.errors=$scope.error=null,Auth.login($scope.username,$scope.password,$scope.service,$scope.apikey),$location.path("/dashboard"))}).error(function(){$scope.loading=!1})}}),app.service("Auth",function($rootScope,Storage){"use strict";this.isLoggedIn=function(){return Storage.get("token")},this.hasLonLat=function(){return!1},this.login=function(usuario,password,token,apikey,name,email,tel){$rootScope.name=name,$rootScope.token=token,$rootScope.usuario=usuario,$rootScope.password=password,$rootScope.apikey=apikey,Storage.put("usuario",usuario),Storage.put("password",password),Storage.put("token",token),Storage.put("apikey",apikey),Storage.put("name",name),Storage.put("email",email),Storage.put("tel",tel)},this.logout=function(){$rootScope.name=null,$rootScope.token=null,$rootScope.apikey=null,$rootScope.usuario=null,$rootScope.password=null,Storage["delete"]("usuario"),Storage["delete"]("password"),Storage["delete"]("token"),Storage["delete"]("apikey"),Storage["delete"]("name"),Storage["delete"]("email"),Storage["delete"]("tel")}}),app.factory("socket",function($rootScope){"use strict";var socket=io.connect();return{on:function(eventName,callback){socket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args)})})},emit:function(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){callback&&callback.apply(socket,args)})})}}}),app.service("Storage",function(){"use strict";this.put=function(name,data){localStorage.setItem(name,data)},this.get=function(name){var name=localStorage.getItem(name);return name?name:""},this["delete"]=function(name){localStorage.removeItem(name)},this.getUserProps=function(){var userProps={UserProps:[{name:"nome",value:this.get("name")},{name:"email",value:this.get("email")},{name:"tel",value:this.get("tel")}]};return JSON.stringify(userProps)}});